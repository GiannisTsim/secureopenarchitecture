<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans" xmlns:sec="http://www.springframework.org/schema/security"
             xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- begin production security config -->
	<beans profile="production">
	
		<!-- audit listeners -->
    	<bean id="authenticationListener" class="org.springframework.security.authentication.event.LoggerListener" />
    	<bean id="authorizationListener" class="org.springframework.security.access.event.LoggerListener" />

		<!-- unprotected resources -->
		<sec:http pattern="/js/**" security="none"/>

		<!-- protected resources -->
		<sec:http use-expressions="true" entry-point-ref="casEntryPoint" >
    		<sec:intercept-url pattern="/**"  access="isAuthenticated()"/>
        	<sec:custom-filter ref="casFilter" after="CAS_FILTER"/>
    	</sec:http>   

   		<sec:authentication-manager alias="authManager">
        	<sec:authentication-provider ref="casAuthProvider"/>
    	</sec:authentication-manager>
        
    	<bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
        	<property name="service" value="${swif.endpoint}/j_spring_cas_security_check"/>
        	<property name="authenticateAllArtifacts" value="true"/>
    	</bean>
    
    	<bean id="casEntryPoint" class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
                <property name="loginUrl" value="${cas.endpoint}/login"/>
        	<property name="serviceProperties" ref="serviceProperties"/>
    	</bean>
    
		<bean id="casFilter" class="org.springframework.security.cas.web.CasAuthenticationFilter">
        	<property name="authenticationManager" ref="authManager"/>
        	<property name="serviceProperties" ref="serviceProperties"/>
        	<property name="authenticationDetailsSource" ref="authenticationDetailsSource" />
        	<property name="authenticationFailureHandler" ref="authenticationFailureHandler" />
        	<property name="authenticationSuccessHandler" ref="authenticationSuccessHandler" /> 
    	</bean>
    
    	<bean id="authenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
        	<property name="defaultFailureUrl" value="/unAuthorized.jsp"/>
    	</bean>
    
    	<bean id="authenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
    		<property name="defaultTargetUrl" value="/"/>
    	</bean>
    
		<bean id="authenticationDetailsSource" class="org.springframework.security.cas.web.authentication.ServiceAuthenticationDetailsSource"/>
	
    	<bean id="casAuthProvider" class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
        	<property name="serviceProperties" ref="serviceProperties" />
        	<property name="key" value="swif"/>
			<property name="userDetailsService" ref="ldapUserDetailService" />
			<property name="ticketValidator" ref="casTicketValidator" />
    	</bean>
    
    	<bean id="casTicketValidator" class="org.jasig.cas.client.validation.Cas20ProxyTicketValidator" >
             <constructor-arg index="0" value="${cas.endpoint}" />
    	</bean>
    	
    	<bean id="ldapUserDetailService" class="org.springframework.security.ldap.userdetails.LdapUserDetailsService">
         	<constructor-arg ref="ldapUserSearch" />
         	<property name="userDetailsMapper" ref="swifUserDetailsMapper" />
    	</bean>
 
    	<bean id="ldapUserSearch" class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
          	<constructor-arg value="${ldap.user.base.dn}" />
       		<constructor-arg value="(uid={0})"/>
       		<constructor-arg ref="ldapContextSource" />
    	</bean>

    
  		<bean id="ldapContextSource" class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
        	<constructor-arg  value="${ldap.endpoint}"/>
        	<property name="userDn" value="${ldap.connect.user}" />
     		<property name="password" value="${ldap.connect.password}" />
    	</bean>	
	
	</beans>    
	<!-- end production security config -->
	
</beans>
